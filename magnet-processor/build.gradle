plugins {
    id 'kotlin'
    id 'com.vanniktech.maven.publish'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

if (JavaVersion.current() >= JavaVersion.VERSION_16) {
    test {
        jvmArgs(
                // used
                "--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
                // the others
                "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        )
    }
}

dependencies {
    implementation project(':magnet')
    implementation project(':magnet-kotlin')
    implementation deps.kotlinjdk
    implementation deps.kotlinMetadata
    implementation deps.javapoet

    testImplementation deps.compileTesting
    testImplementation deps.jsr305
    testImplementation files(file("libs/tools.jar"))
}
